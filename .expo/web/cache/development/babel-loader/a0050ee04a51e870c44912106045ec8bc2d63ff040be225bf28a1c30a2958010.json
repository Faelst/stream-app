{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { makeRedirectUri, startAsync } from 'expo-auth-session';\nimport React, { useEffect, createContext, useContext, useState } from 'react';\nimport { generateRandom } from 'expo-auth-session/build/PKCE';\nimport { api } from \"../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({});\nvar twitchEndpoints = {\n  authorization: 'https://id.twitch.tv/oauth2/authorize',\n  revocation: 'https://id.twitch.tv/oauth2/revoke'\n};\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggingOut = _useState2[0],\n    setIsLoggingOut = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoggingIn = _useState4[0],\n    setIsLoggingIn = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userToken = _useState8[0],\n    setUserToken = _useState8[1];\n  function signIn() {\n    var CLIENT_ID, REDIRECT_URI, RESPONSE_TYPE, SCOPE, FORCE_VERIFY, STATE, authUrl, auth, response;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          setIsLoggingIn(true);\n          CLIENT_ID = 'tw7mv3ss2dedn8gz5j2fnj4venfqe9';\n          REDIRECT_URI = makeRedirectUri({\n            useProxy: true\n          });\n          RESPONSE_TYPE = 'token';\n          SCOPE = 'user:read:email';\n          FORCE_VERIFY = true;\n          STATE = generateRandom(30);\n          authUrl = twitchEndpoints.authorization + (\"?client_id=\" + CLIENT_ID) + (\"&redirect_uri=\" + REDIRECT_URI) + (\"&response_type=\" + RESPONSE_TYPE) + (\"&scope=\" + SCOPE) + (\"&force_verify=\" + FORCE_VERIFY) + (\"&state=\" + STATE);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(startAsync({\n            authUrl: authUrl\n          }));\n        case 11:\n          auth = _context.sent;\n          if (!((auth == null ? void 0 : auth.type) !== 'success')) {\n            _context.next = 14;\n            break;\n          }\n          throw new Error('Erro ao efetuar login');\n        case 14:\n          if (!(auth.params.state !== STATE)) {\n            _context.next = 16;\n            break;\n          }\n          throw new Error('Estado Invalido');\n        case 16:\n          api.defaults.headers.common['Authorization'] = \"Bearer \" + auth.params.access_token;\n          console.log(auth.params.access_token);\n          _context.next = 20;\n          return _regeneratorRuntime.awrap(api.get('/users'));\n        case 20:\n          response = _context.sent;\n          setUser(response.data.data[0]);\n          setUserToken(auth.params.access_token);\n          _context.next = 28;\n          break;\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n        case 28:\n          _context.prev = 28;\n          setIsLoggingIn(false);\n          return _context.finish(28);\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 25, 28, 31]], Promise);\n  }\n  function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          try {} catch (error) {} finally {}\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  }\n  useEffect(function () {}, []);\n  return _jsx(AuthContext.Provider, {\n    value: {\n      user: user,\n      isLoggingOut: isLoggingOut,\n      isLoggingIn: isLoggingIn,\n      signIn: signIn,\n      signOut: signOut\n    },\n    children: children\n  });\n}\nfunction useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}\nexport { AuthProvider, useAuth };","map":{"version":3,"names":["makeRedirectUri","startAsync","React","useEffect","createContext","useContext","useState","generateRandom","api","jsx","_jsx","AuthContext","twitchEndpoints","authorization","revocation","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggingOut","setIsLoggingOut","_useState3","_useState4","isLoggingIn","setIsLoggingIn","_useState5","_useState6","user","setUser","_useState7","_useState8","userToken","setUserToken","signIn","CLIENT_ID","REDIRECT_URI","RESPONSE_TYPE","SCOPE","FORCE_VERIFY","STATE","authUrl","auth","response","_regeneratorRuntime","async","signIn$","_context","prev","next","useProxy","awrap","sent","type","Error","params","state","defaults","headers","common","access_token","console","log","get","data","t0","finish","stop","Promise","signOut","signOut$","_context2","error","Provider","value","useAuth","context"],"sources":["/Users/fael_st/www/react-native/stream-app/src/hooks/useAuth.tsx"],"sourcesContent":["import { makeRedirectUri, revokeAsync, startAsync } from 'expo-auth-session';\nimport React, {\n  useEffect,\n  createContext,\n  useContext,\n  useState,\n  ReactNode,\n} from 'react';\nimport { generateRandom } from 'expo-auth-session/build/PKCE';\n\nimport { api } from '../services/api';\n\ninterface User {\n  id: number;\n  display_name: string;\n  email: string;\n  profile_image_url: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  isLoggingOut: boolean;\n  isLoggingIn: boolean;\n  signIn: () => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\ninterface AuthProviderData {\n  children: ReactNode;\n}\n\nconst AuthContext = createContext({} as AuthContextData);\n\nconst twitchEndpoints = {\n  authorization: 'https://id.twitch.tv/oauth2/authorize',\n  revocation: 'https://id.twitch.tv/oauth2/revoke',\n};\n\nfunction AuthProvider({ children }: AuthProviderData) {\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const [user, setUser] = useState({} as User);\n  const [userToken, setUserToken] = useState('');\n\n  // get CLIENT_ID from environment variables\n\n  async function signIn() {\n    try {\n      setIsLoggingIn(true);\n\n      const CLIENT_ID = 'tw7mv3ss2dedn8gz5j2fnj4venfqe9';\n      const REDIRECT_URI = makeRedirectUri({ useProxy: true });\n      const RESPONSE_TYPE = 'token';\n      const SCOPE = 'user:read:email';\n      const FORCE_VERIFY = true;\n      const STATE = generateRandom(30);\n\n      const authUrl =\n        twitchEndpoints.authorization +\n        `?client_id=${CLIENT_ID}` +\n        `&redirect_uri=${REDIRECT_URI}` +\n        `&response_type=${RESPONSE_TYPE}` +\n        `&scope=${SCOPE}` +\n        `&force_verify=${FORCE_VERIFY}` +\n        `&state=${STATE}`;\n\n      const auth = await startAsync({ authUrl });\n\n      if (auth?.type !== 'success') {\n        throw new Error('Erro ao efetuar login');\n      }\n      // Object {\n      //   \"authentication\": null,\n      //   \"errorCode\": null,\n      //   \"params\": Object {\n      //     \"access_token\": \"9it0djuttmuv4x86jiskefka8dtkim\",\n      //     \"scope\": \"user:read:email\",\n      //     \"state\": \"FDDqUeq426W3hzZmRb1nw0vpczxUeN\",\n      //     \"stream.data://expo-auth-session\": \"\",\n      //     \"token_type\": \"bearer\",\n      //   },\n      //   \"type\": \"success\",\n      //   \"url\": \"stream.data://expo-auth-session#access_token=9it0djuttmuv4x86jiskefka8dtkim&scope=user%3Aread%3Aemail&state=FDDqUeq426W3hzZmRb1nw0vpczxUeN&token_type=bearer\",\n      // }\n\n      if (auth.params.state !== STATE) {\n        throw new Error('Estado Invalido');\n      }\n\n      api.defaults.headers.common[\n        'Authorization'\n      ] = `Bearer ${auth.params.access_token}`;\n\n      console.log(auth.params.access_token);\n\n      const response = await api.get('/users');\n\n      setUser(response.data.data[0]);\n\n      setUserToken(auth.params.access_token);\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoggingIn(false);\n    }\n  }\n\n  async function signOut() {\n    try {\n      // set isLoggingOut to true\n      // call revokeAsync with access_token, client_id and twitchEndpoint revocation\n    } catch (error) {\n    } finally {\n      // set user state to an empty User object\n      // set userToken state to an empty string\n      // remove \"access_token\" from request's authorization header\n      // set isLoggingOut to false\n    }\n  }\n\n  useEffect(() => {\n    // add client_id to request's \"Client-Id\" header\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, isLoggingOut, isLoggingIn, signIn, signOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"],"mappings":";;AAAA,SAASA,eAAe,EAAeC,UAAU,QAAQ,mBAAmB;AAC5E,OAAOC,KAAK,IACVC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,QAAQ,QAEH,OAAO;AACd,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,SAASC,GAAG;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAqBtC,IAAMC,WAAW,GAAGP,aAAa,CAAC,CAAC,CAAC,CAAoB;AAExD,IAAMQ,eAAe,GAAG;EACtBC,aAAa,EAAE,uCAAuC;EACtDC,UAAU,EAAE;AACd,CAAC;AAED,SAASC,YAAYA,CAAAC,IAAA,EAAiC;EAAA,IAA9BC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC9B,IAAAC,SAAA,GAAwCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAsCjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAwBrB,QAAQ,CAAC,CAAC,CAAC,CAAS;IAAAsB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAAkCzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAI9B,SAAeG,MAAMA,CAAA;IAAA,IAAAC,SAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,KAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,QAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAEjBvB,cAAc,CAAC,IAAI,CAAC;UAEdU,SAAS,GAAG,gCAAgC;UAC5CC,YAAY,GAAGrC,eAAe,CAAC;YAAEmD,QAAQ,EAAE;UAAK,CAAC,CAAC;UAClDb,aAAa,GAAG,OAAO;UACvBC,KAAK,GAAG,iBAAiB;UACzBC,YAAY,GAAG,IAAI;UACnBC,KAAK,GAAGlC,cAAc,CAAC,EAAE,CAAC;UAE1BmC,OAAO,GACX9B,eAAe,CAACC,aAAa,oBACfuB,SAAS,CAAE,uBACRC,YAAY,CAAE,wBACbC,aAAa,CAAE,gBACvBC,KAAK,CAAE,uBACAC,YAAY,CAAE,gBACrBC,KAAK,CAAE;UAAAO,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAO,KAAA,CAEAnD,UAAU,CAAC;YAAEyC,OAAO,EAAPA;UAAQ,CAAC,CAAC;QAAA;UAApCC,IAAI,GAAAK,QAAA,CAAAK,IAAA;UAAA,MAEN,CAAAV,IAAI,oBAAJA,IAAI,CAAEW,IAAI,MAAK,SAAS;YAAAN,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACpB,IAAIK,KAAK,CAAC,uBAAuB,CAAC;QAAA;UAAA,MAgBtCZ,IAAI,CAACa,MAAM,CAACC,KAAK,KAAKhB,KAAK;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACvB,IAAIK,KAAK,CAAC,iBAAiB,CAAC;QAAA;UAGpC/C,GAAG,CAACkD,QAAQ,CAACC,OAAO,CAACC,MAAM,CACzB,eAAe,CAChB,eAAajB,IAAI,CAACa,MAAM,CAACK,YAAc;UAExCC,OAAO,CAACC,GAAG,CAACpB,IAAI,CAACa,MAAM,CAACK,YAAY,CAAC;UAACb,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAO,KAAA,CAEf5C,GAAG,CAACwD,GAAG,CAAC,QAAQ,CAAC;QAAA;UAAlCpB,QAAQ,GAAAI,QAAA,CAAAK,IAAA;UAEdvB,OAAO,CAACc,QAAQ,CAACqB,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;UAE9B/B,YAAY,CAACS,IAAI,CAACa,MAAM,CAACK,YAAY,CAAC;UAACb,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAkB,EAAA,GAAAlB,QAAA;UAAA,MAAAA,QAAA,CAAAkB,EAAA;QAAA;UAAAlB,QAAA,CAAAC,IAAA;UAIvCvB,cAAc,CAAC,KAAK,CAAC;UAAC,OAAAsB,QAAA,CAAAmB,MAAA;QAAA;QAAA;UAAA,OAAAnB,QAAA,CAAAoB,IAAA;MAAA;IAAA,kCAAAC,OAAA;EAAA;EAI1B,SAAeC,OAAOA,CAAA;IAAA,OAAAzB,mBAAA,CAAAC,KAAA,UAAAyB,SAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvB,IAAA,GAAAuB,SAAA,CAAAtB,IAAA;QAAA;UACpB,IAAI,CAGJ,CAAC,CAAC,OAAOuB,KAAK,EAAE,CAChB,CAAC,SAAS,CAKV;QAAC;QAAA;UAAA,OAAAD,SAAA,CAAAJ,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA;EAGHlE,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEO,IAAA,CAACC,WAAW,CAAC+D,QAAQ;IACnBC,KAAK,EAAE;MAAE9C,IAAI,EAAJA,IAAI;MAAER,YAAY,EAAZA,YAAY;MAAEI,WAAW,EAAXA,WAAW;MAAEU,MAAM,EAANA,MAAM;MAAEmC,OAAO,EAAPA;IAAQ,CAAE;IAAArD,QAAA,EAE3DA;EAAQ,EACY;AAE3B;AAEA,SAAS2D,OAAOA,CAAA,EAAG;EACjB,IAAMC,OAAO,GAAGxE,UAAU,CAACM,WAAW,CAAC;EAEvC,OAAOkE,OAAO;AAChB;AAEA,SAAS9D,YAAY,EAAE6D,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}